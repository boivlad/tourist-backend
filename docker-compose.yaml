#version: "3"
#
#services:
#  postgres-tourist:
#    image: postgres:11.5
#    container_name: postgress
#    restart: always
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 1111
#      POSTGRES_DB: touristP
#      DATABASE_HOST: localhost
#    volumes:
#      - ./test.sql:/docker-entrypoint-initdb.d/init.sql
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmins
#    environment:
#      PGADMIN_DEFAULT_EMAIL: pgadmin@gmail.com
#      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
#    depends_on:
#      - postgres-tourist
#    ports:
#      - "5050:80"
#    restart: unless-stopped
#  app-tourist:
#    build: .
#    depends_on:
#      - postgres-tourist
#    network_mode: "service:postgres-tourist"
#    environment:
#      DATABASE_URL: postgres://postgres:1111@localhost:5432/touristP
#      NODE_ENV: development
#      PORT: 8080
#    command: sh -c "sleep 10 && npm start"
#    volumes:
#      - .:/app/
#      - /app/node_modules

version: '3'

services:
  teste-postgres-compose:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: touristP
    ports:
      - "15432:5432"
    volumes:
      - ./test.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres-compose-network

  teste-pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
    ports:
      - "16543:80"
    depends_on:
      - teste-postgres-compose
    networks:
      - postgres-compose-network

networks:
  postgres-compose-network:
    driver: bridge
